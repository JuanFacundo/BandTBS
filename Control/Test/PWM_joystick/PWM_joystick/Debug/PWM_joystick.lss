
PWM_joystick.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004a8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004fc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000052c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  0000056c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008d1  00000000  00000000  000005c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000078e  00000000  00000000  00000e95  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003a9  00000000  00000000  00001623  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  000019cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000442  00000000  00000000  00001a44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000096  00000000  00000000  00001e86  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00001f1c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 75 00 	call	0xea	; 0xea <main>
  78:	0c 94 52 02 	jmp	0x4a4	; 0x4a4 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <ADC_init>:
#include "ADC.h"

void ADC_init(void) 
{
	ADMUX = (1 << REFS0);
  80:	80 e4       	ldi	r24, 0x40	; 64
  82:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
  86:	87 e8       	ldi	r24, 0x87	; 135
  88:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  8c:	08 95       	ret

0000008e <ADC_read>:
}

uint16_t ADC_read(uint8_t ch) 
{
	ch &= 0b00000011;
  8e:	83 70       	andi	r24, 0x03	; 3
	ADMUX = (ADMUX & 0xF8) | ch;
  90:	ec e7       	ldi	r30, 0x7C	; 124
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	90 81       	ld	r25, Z
  96:	98 7f       	andi	r25, 0xF8	; 248
  98:	89 2b       	or	r24, r25
  9a:	80 83       	st	Z, r24
	
	// Start conversion
	ADCSRA |= (1 << ADSC);
  9c:	ea e7       	ldi	r30, 0x7A	; 122
  9e:	f0 e0       	ldi	r31, 0x00	; 0
  a0:	80 81       	ld	r24, Z
  a2:	80 64       	ori	r24, 0x40	; 64
  a4:	80 83       	st	Z, r24
	
	// Wait for conversion to complete
	while (ADCSRA & (1 << ADSC));
  a6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  aa:	86 fd       	sbrc	r24, 6
  ac:	fc cf       	rjmp	.-8      	; 0xa6 <ADC_read+0x18>
	
	return (ADC);
  ae:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  b2:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
  b6:	08 95       	ret

000000b8 <setupPWM>:
// x en A0


void setupPWM()
{
	DDRB |= (1 << PB1) | (1 << PB2);                            // Configurar los pines de salida para OC1A (PB1) y OC1B (PB2)
  b8:	84 b1       	in	r24, 0x04	; 4
  ba:	86 60       	ori	r24, 0x06	; 6
  bc:	84 b9       	out	0x04, r24	; 4

	TCCR1A = (1 << COM1A1) | (1 << COM1B1) | (1 << WGM11);      // Configurar TCCR1A para Fast PWM
  be:	82 ea       	ldi	r24, 0xA2	; 162
  c0:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>

	TCCR1B = (1 << WGM13) | (1 << WGM12) | (1 << CS11);         // Configurar TCCR1B para Fast PWM y preescaler de 8
  c4:	8a e1       	ldi	r24, 0x1A	; 26
  c6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>

	// Configurar el valor de TOP para ICR1
	ICR1 = 39999;                                               // Para una frecuencia de PWM de 50Hz (20ms periodo)
  ca:	8f e3       	ldi	r24, 0x3F	; 63
  cc:	9c e9       	ldi	r25, 0x9C	; 156
  ce:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
  d2:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
  d6:	08 95       	ret

000000d8 <setPWM>:
}

void setPWM(uint16_t pulse_widthx,uint16_t pulse_widthy) 
{
	OCR1A = pulse_widthx;
  d8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  dc:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	OCR1B = pulse_widthy;
  e0:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
  e4:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
  e8:	08 95       	ret

000000ea <main>:
}

int main(void) 
{
	setupPWM();
  ea:	0e 94 5c 00 	call	0xb8	; 0xb8 <setupPWM>
	ADC_init();
  ee:	0e 94 40 00 	call	0x80	; 0x80 <ADC_init>

	while (1)
	{
		uint16_t x_value = ADC_read(0);
  f2:	80 e0       	ldi	r24, 0x00	; 0
  f4:	0e 94 47 00 	call	0x8e	; 0x8e <ADC_read>

		uint16_t pulse_widthx = (int)(x_value*(4000.0/1023.0) + 1000);
  f8:	bc 01       	movw	r22, r24
  fa:	80 e0       	ldi	r24, 0x00	; 0
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	0e 94 57 01 	call	0x2ae	; 0x2ae <__floatunsisf>
 102:	20 e9       	ldi	r18, 0x90	; 144
 104:	3e e3       	ldi	r19, 0x3E	; 62
 106:	4a e7       	ldi	r20, 0x7A	; 122
 108:	50 e4       	ldi	r21, 0x40	; 64
 10a:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__mulsf3>
 10e:	20 e0       	ldi	r18, 0x00	; 0
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	4a e7       	ldi	r20, 0x7A	; 122
 114:	54 e4       	ldi	r21, 0x44	; 68
 116:	0e 94 b5 00 	call	0x16a	; 0x16a <__addsf3>
 11a:	0e 94 21 01 	call	0x242	; 0x242 <__fixsfsi>
 11e:	6b 01       	movw	r12, r22
 120:	7c 01       	movw	r14, r24
		
		uint16_t y_value = ADC_read(1);
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	0e 94 47 00 	call	0x8e	; 0x8e <ADC_read>

		uint16_t pulse_widthy = (int)(y_value*(4000.0/1023.0) + 1000);
 128:	bc 01       	movw	r22, r24
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	0e 94 57 01 	call	0x2ae	; 0x2ae <__floatunsisf>
 132:	20 e9       	ldi	r18, 0x90	; 144
 134:	3e e3       	ldi	r19, 0x3E	; 62
 136:	4a e7       	ldi	r20, 0x7A	; 122
 138:	50 e4       	ldi	r21, 0x40	; 64
 13a:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__mulsf3>
 13e:	20 e0       	ldi	r18, 0x00	; 0
 140:	30 e0       	ldi	r19, 0x00	; 0
 142:	4a e7       	ldi	r20, 0x7A	; 122
 144:	54 e4       	ldi	r21, 0x44	; 68
 146:	0e 94 b5 00 	call	0x16a	; 0x16a <__addsf3>
 14a:	0e 94 21 01 	call	0x242	; 0x242 <__fixsfsi>

		setPWM(pulse_widthx,pulse_widthy);
 14e:	c6 01       	movw	r24, r12
 150:	0e 94 6c 00 	call	0xd8	; 0xd8 <setPWM>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 154:	2f ef       	ldi	r18, 0xFF	; 255
 156:	80 e7       	ldi	r24, 0x70	; 112
 158:	92 e0       	ldi	r25, 0x02	; 2
 15a:	21 50       	subi	r18, 0x01	; 1
 15c:	80 40       	sbci	r24, 0x00	; 0
 15e:	90 40       	sbci	r25, 0x00	; 0
 160:	e1 f7       	brne	.-8      	; 0x15a <main+0x70>
 162:	00 c0       	rjmp	.+0      	; 0x164 <main+0x7a>
 164:	00 00       	nop
 166:	c5 cf       	rjmp	.-118    	; 0xf2 <main+0x8>

00000168 <__subsf3>:
 168:	50 58       	subi	r21, 0x80	; 128

0000016a <__addsf3>:
 16a:	bb 27       	eor	r27, r27
 16c:	aa 27       	eor	r26, r26
 16e:	0e 94 cc 00 	call	0x198	; 0x198 <__addsf3x>
 172:	0c 94 ab 01 	jmp	0x356	; 0x356 <__fp_round>
 176:	0e 94 9d 01 	call	0x33a	; 0x33a <__fp_pscA>
 17a:	38 f0       	brcs	.+14     	; 0x18a <__addsf3+0x20>
 17c:	0e 94 a4 01 	call	0x348	; 0x348 <__fp_pscB>
 180:	20 f0       	brcs	.+8      	; 0x18a <__addsf3+0x20>
 182:	39 f4       	brne	.+14     	; 0x192 <__addsf3+0x28>
 184:	9f 3f       	cpi	r25, 0xFF	; 255
 186:	19 f4       	brne	.+6      	; 0x18e <__addsf3+0x24>
 188:	26 f4       	brtc	.+8      	; 0x192 <__addsf3+0x28>
 18a:	0c 94 9a 01 	jmp	0x334	; 0x334 <__fp_nan>
 18e:	0e f4       	brtc	.+2      	; 0x192 <__addsf3+0x28>
 190:	e0 95       	com	r30
 192:	e7 fb       	bst	r30, 7
 194:	0c 94 94 01 	jmp	0x328	; 0x328 <__fp_inf>

00000198 <__addsf3x>:
 198:	e9 2f       	mov	r30, r25
 19a:	0e 94 bc 01 	call	0x378	; 0x378 <__fp_split3>
 19e:	58 f3       	brcs	.-42     	; 0x176 <__addsf3+0xc>
 1a0:	ba 17       	cp	r27, r26
 1a2:	62 07       	cpc	r22, r18
 1a4:	73 07       	cpc	r23, r19
 1a6:	84 07       	cpc	r24, r20
 1a8:	95 07       	cpc	r25, r21
 1aa:	20 f0       	brcs	.+8      	; 0x1b4 <__addsf3x+0x1c>
 1ac:	79 f4       	brne	.+30     	; 0x1cc <__addsf3x+0x34>
 1ae:	a6 f5       	brtc	.+104    	; 0x218 <__addsf3x+0x80>
 1b0:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__fp_zero>
 1b4:	0e f4       	brtc	.+2      	; 0x1b8 <__addsf3x+0x20>
 1b6:	e0 95       	com	r30
 1b8:	0b 2e       	mov	r0, r27
 1ba:	ba 2f       	mov	r27, r26
 1bc:	a0 2d       	mov	r26, r0
 1be:	0b 01       	movw	r0, r22
 1c0:	b9 01       	movw	r22, r18
 1c2:	90 01       	movw	r18, r0
 1c4:	0c 01       	movw	r0, r24
 1c6:	ca 01       	movw	r24, r20
 1c8:	a0 01       	movw	r20, r0
 1ca:	11 24       	eor	r1, r1
 1cc:	ff 27       	eor	r31, r31
 1ce:	59 1b       	sub	r21, r25
 1d0:	99 f0       	breq	.+38     	; 0x1f8 <__addsf3x+0x60>
 1d2:	59 3f       	cpi	r21, 0xF9	; 249
 1d4:	50 f4       	brcc	.+20     	; 0x1ea <__addsf3x+0x52>
 1d6:	50 3e       	cpi	r21, 0xE0	; 224
 1d8:	68 f1       	brcs	.+90     	; 0x234 <__addsf3x+0x9c>
 1da:	1a 16       	cp	r1, r26
 1dc:	f0 40       	sbci	r31, 0x00	; 0
 1de:	a2 2f       	mov	r26, r18
 1e0:	23 2f       	mov	r18, r19
 1e2:	34 2f       	mov	r19, r20
 1e4:	44 27       	eor	r20, r20
 1e6:	58 5f       	subi	r21, 0xF8	; 248
 1e8:	f3 cf       	rjmp	.-26     	; 0x1d0 <__addsf3x+0x38>
 1ea:	46 95       	lsr	r20
 1ec:	37 95       	ror	r19
 1ee:	27 95       	ror	r18
 1f0:	a7 95       	ror	r26
 1f2:	f0 40       	sbci	r31, 0x00	; 0
 1f4:	53 95       	inc	r21
 1f6:	c9 f7       	brne	.-14     	; 0x1ea <__addsf3x+0x52>
 1f8:	7e f4       	brtc	.+30     	; 0x218 <__addsf3x+0x80>
 1fa:	1f 16       	cp	r1, r31
 1fc:	ba 0b       	sbc	r27, r26
 1fe:	62 0b       	sbc	r22, r18
 200:	73 0b       	sbc	r23, r19
 202:	84 0b       	sbc	r24, r20
 204:	ba f0       	brmi	.+46     	; 0x234 <__addsf3x+0x9c>
 206:	91 50       	subi	r25, 0x01	; 1
 208:	a1 f0       	breq	.+40     	; 0x232 <__addsf3x+0x9a>
 20a:	ff 0f       	add	r31, r31
 20c:	bb 1f       	adc	r27, r27
 20e:	66 1f       	adc	r22, r22
 210:	77 1f       	adc	r23, r23
 212:	88 1f       	adc	r24, r24
 214:	c2 f7       	brpl	.-16     	; 0x206 <__addsf3x+0x6e>
 216:	0e c0       	rjmp	.+28     	; 0x234 <__addsf3x+0x9c>
 218:	ba 0f       	add	r27, r26
 21a:	62 1f       	adc	r22, r18
 21c:	73 1f       	adc	r23, r19
 21e:	84 1f       	adc	r24, r20
 220:	48 f4       	brcc	.+18     	; 0x234 <__addsf3x+0x9c>
 222:	87 95       	ror	r24
 224:	77 95       	ror	r23
 226:	67 95       	ror	r22
 228:	b7 95       	ror	r27
 22a:	f7 95       	ror	r31
 22c:	9e 3f       	cpi	r25, 0xFE	; 254
 22e:	08 f0       	brcs	.+2      	; 0x232 <__addsf3x+0x9a>
 230:	b0 cf       	rjmp	.-160    	; 0x192 <__addsf3+0x28>
 232:	93 95       	inc	r25
 234:	88 0f       	add	r24, r24
 236:	08 f0       	brcs	.+2      	; 0x23a <__addsf3x+0xa2>
 238:	99 27       	eor	r25, r25
 23a:	ee 0f       	add	r30, r30
 23c:	97 95       	ror	r25
 23e:	87 95       	ror	r24
 240:	08 95       	ret

00000242 <__fixsfsi>:
 242:	0e 94 28 01 	call	0x250	; 0x250 <__fixunssfsi>
 246:	68 94       	set
 248:	b1 11       	cpse	r27, r1
 24a:	0c 94 df 01 	jmp	0x3be	; 0x3be <__fp_szero>
 24e:	08 95       	ret

00000250 <__fixunssfsi>:
 250:	0e 94 c4 01 	call	0x388	; 0x388 <__fp_splitA>
 254:	88 f0       	brcs	.+34     	; 0x278 <__fixunssfsi+0x28>
 256:	9f 57       	subi	r25, 0x7F	; 127
 258:	98 f0       	brcs	.+38     	; 0x280 <__fixunssfsi+0x30>
 25a:	b9 2f       	mov	r27, r25
 25c:	99 27       	eor	r25, r25
 25e:	b7 51       	subi	r27, 0x17	; 23
 260:	b0 f0       	brcs	.+44     	; 0x28e <__fixunssfsi+0x3e>
 262:	e1 f0       	breq	.+56     	; 0x29c <__fixunssfsi+0x4c>
 264:	66 0f       	add	r22, r22
 266:	77 1f       	adc	r23, r23
 268:	88 1f       	adc	r24, r24
 26a:	99 1f       	adc	r25, r25
 26c:	1a f0       	brmi	.+6      	; 0x274 <__fixunssfsi+0x24>
 26e:	ba 95       	dec	r27
 270:	c9 f7       	brne	.-14     	; 0x264 <__fixunssfsi+0x14>
 272:	14 c0       	rjmp	.+40     	; 0x29c <__fixunssfsi+0x4c>
 274:	b1 30       	cpi	r27, 0x01	; 1
 276:	91 f0       	breq	.+36     	; 0x29c <__fixunssfsi+0x4c>
 278:	0e 94 de 01 	call	0x3bc	; 0x3bc <__fp_zero>
 27c:	b1 e0       	ldi	r27, 0x01	; 1
 27e:	08 95       	ret
 280:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__fp_zero>
 284:	67 2f       	mov	r22, r23
 286:	78 2f       	mov	r23, r24
 288:	88 27       	eor	r24, r24
 28a:	b8 5f       	subi	r27, 0xF8	; 248
 28c:	39 f0       	breq	.+14     	; 0x29c <__fixunssfsi+0x4c>
 28e:	b9 3f       	cpi	r27, 0xF9	; 249
 290:	cc f3       	brlt	.-14     	; 0x284 <__fixunssfsi+0x34>
 292:	86 95       	lsr	r24
 294:	77 95       	ror	r23
 296:	67 95       	ror	r22
 298:	b3 95       	inc	r27
 29a:	d9 f7       	brne	.-10     	; 0x292 <__fixunssfsi+0x42>
 29c:	3e f4       	brtc	.+14     	; 0x2ac <__fixunssfsi+0x5c>
 29e:	90 95       	com	r25
 2a0:	80 95       	com	r24
 2a2:	70 95       	com	r23
 2a4:	61 95       	neg	r22
 2a6:	7f 4f       	sbci	r23, 0xFF	; 255
 2a8:	8f 4f       	sbci	r24, 0xFF	; 255
 2aa:	9f 4f       	sbci	r25, 0xFF	; 255
 2ac:	08 95       	ret

000002ae <__floatunsisf>:
 2ae:	e8 94       	clt
 2b0:	09 c0       	rjmp	.+18     	; 0x2c4 <__floatsisf+0x12>

000002b2 <__floatsisf>:
 2b2:	97 fb       	bst	r25, 7
 2b4:	3e f4       	brtc	.+14     	; 0x2c4 <__floatsisf+0x12>
 2b6:	90 95       	com	r25
 2b8:	80 95       	com	r24
 2ba:	70 95       	com	r23
 2bc:	61 95       	neg	r22
 2be:	7f 4f       	sbci	r23, 0xFF	; 255
 2c0:	8f 4f       	sbci	r24, 0xFF	; 255
 2c2:	9f 4f       	sbci	r25, 0xFF	; 255
 2c4:	99 23       	and	r25, r25
 2c6:	a9 f0       	breq	.+42     	; 0x2f2 <__floatsisf+0x40>
 2c8:	f9 2f       	mov	r31, r25
 2ca:	96 e9       	ldi	r25, 0x96	; 150
 2cc:	bb 27       	eor	r27, r27
 2ce:	93 95       	inc	r25
 2d0:	f6 95       	lsr	r31
 2d2:	87 95       	ror	r24
 2d4:	77 95       	ror	r23
 2d6:	67 95       	ror	r22
 2d8:	b7 95       	ror	r27
 2da:	f1 11       	cpse	r31, r1
 2dc:	f8 cf       	rjmp	.-16     	; 0x2ce <__floatsisf+0x1c>
 2de:	fa f4       	brpl	.+62     	; 0x31e <__floatsisf+0x6c>
 2e0:	bb 0f       	add	r27, r27
 2e2:	11 f4       	brne	.+4      	; 0x2e8 <__floatsisf+0x36>
 2e4:	60 ff       	sbrs	r22, 0
 2e6:	1b c0       	rjmp	.+54     	; 0x31e <__floatsisf+0x6c>
 2e8:	6f 5f       	subi	r22, 0xFF	; 255
 2ea:	7f 4f       	sbci	r23, 0xFF	; 255
 2ec:	8f 4f       	sbci	r24, 0xFF	; 255
 2ee:	9f 4f       	sbci	r25, 0xFF	; 255
 2f0:	16 c0       	rjmp	.+44     	; 0x31e <__floatsisf+0x6c>
 2f2:	88 23       	and	r24, r24
 2f4:	11 f0       	breq	.+4      	; 0x2fa <__floatsisf+0x48>
 2f6:	96 e9       	ldi	r25, 0x96	; 150
 2f8:	11 c0       	rjmp	.+34     	; 0x31c <__floatsisf+0x6a>
 2fa:	77 23       	and	r23, r23
 2fc:	21 f0       	breq	.+8      	; 0x306 <__floatsisf+0x54>
 2fe:	9e e8       	ldi	r25, 0x8E	; 142
 300:	87 2f       	mov	r24, r23
 302:	76 2f       	mov	r23, r22
 304:	05 c0       	rjmp	.+10     	; 0x310 <__floatsisf+0x5e>
 306:	66 23       	and	r22, r22
 308:	71 f0       	breq	.+28     	; 0x326 <__floatsisf+0x74>
 30a:	96 e8       	ldi	r25, 0x86	; 134
 30c:	86 2f       	mov	r24, r22
 30e:	70 e0       	ldi	r23, 0x00	; 0
 310:	60 e0       	ldi	r22, 0x00	; 0
 312:	2a f0       	brmi	.+10     	; 0x31e <__floatsisf+0x6c>
 314:	9a 95       	dec	r25
 316:	66 0f       	add	r22, r22
 318:	77 1f       	adc	r23, r23
 31a:	88 1f       	adc	r24, r24
 31c:	da f7       	brpl	.-10     	; 0x314 <__floatsisf+0x62>
 31e:	88 0f       	add	r24, r24
 320:	96 95       	lsr	r25
 322:	87 95       	ror	r24
 324:	97 f9       	bld	r25, 7
 326:	08 95       	ret

00000328 <__fp_inf>:
 328:	97 f9       	bld	r25, 7
 32a:	9f 67       	ori	r25, 0x7F	; 127
 32c:	80 e8       	ldi	r24, 0x80	; 128
 32e:	70 e0       	ldi	r23, 0x00	; 0
 330:	60 e0       	ldi	r22, 0x00	; 0
 332:	08 95       	ret

00000334 <__fp_nan>:
 334:	9f ef       	ldi	r25, 0xFF	; 255
 336:	80 ec       	ldi	r24, 0xC0	; 192
 338:	08 95       	ret

0000033a <__fp_pscA>:
 33a:	00 24       	eor	r0, r0
 33c:	0a 94       	dec	r0
 33e:	16 16       	cp	r1, r22
 340:	17 06       	cpc	r1, r23
 342:	18 06       	cpc	r1, r24
 344:	09 06       	cpc	r0, r25
 346:	08 95       	ret

00000348 <__fp_pscB>:
 348:	00 24       	eor	r0, r0
 34a:	0a 94       	dec	r0
 34c:	12 16       	cp	r1, r18
 34e:	13 06       	cpc	r1, r19
 350:	14 06       	cpc	r1, r20
 352:	05 06       	cpc	r0, r21
 354:	08 95       	ret

00000356 <__fp_round>:
 356:	09 2e       	mov	r0, r25
 358:	03 94       	inc	r0
 35a:	00 0c       	add	r0, r0
 35c:	11 f4       	brne	.+4      	; 0x362 <__fp_round+0xc>
 35e:	88 23       	and	r24, r24
 360:	52 f0       	brmi	.+20     	; 0x376 <__fp_round+0x20>
 362:	bb 0f       	add	r27, r27
 364:	40 f4       	brcc	.+16     	; 0x376 <__fp_round+0x20>
 366:	bf 2b       	or	r27, r31
 368:	11 f4       	brne	.+4      	; 0x36e <__fp_round+0x18>
 36a:	60 ff       	sbrs	r22, 0
 36c:	04 c0       	rjmp	.+8      	; 0x376 <__fp_round+0x20>
 36e:	6f 5f       	subi	r22, 0xFF	; 255
 370:	7f 4f       	sbci	r23, 0xFF	; 255
 372:	8f 4f       	sbci	r24, 0xFF	; 255
 374:	9f 4f       	sbci	r25, 0xFF	; 255
 376:	08 95       	ret

00000378 <__fp_split3>:
 378:	57 fd       	sbrc	r21, 7
 37a:	90 58       	subi	r25, 0x80	; 128
 37c:	44 0f       	add	r20, r20
 37e:	55 1f       	adc	r21, r21
 380:	59 f0       	breq	.+22     	; 0x398 <__fp_splitA+0x10>
 382:	5f 3f       	cpi	r21, 0xFF	; 255
 384:	71 f0       	breq	.+28     	; 0x3a2 <__fp_splitA+0x1a>
 386:	47 95       	ror	r20

00000388 <__fp_splitA>:
 388:	88 0f       	add	r24, r24
 38a:	97 fb       	bst	r25, 7
 38c:	99 1f       	adc	r25, r25
 38e:	61 f0       	breq	.+24     	; 0x3a8 <__fp_splitA+0x20>
 390:	9f 3f       	cpi	r25, 0xFF	; 255
 392:	79 f0       	breq	.+30     	; 0x3b2 <__fp_splitA+0x2a>
 394:	87 95       	ror	r24
 396:	08 95       	ret
 398:	12 16       	cp	r1, r18
 39a:	13 06       	cpc	r1, r19
 39c:	14 06       	cpc	r1, r20
 39e:	55 1f       	adc	r21, r21
 3a0:	f2 cf       	rjmp	.-28     	; 0x386 <__fp_split3+0xe>
 3a2:	46 95       	lsr	r20
 3a4:	f1 df       	rcall	.-30     	; 0x388 <__fp_splitA>
 3a6:	08 c0       	rjmp	.+16     	; 0x3b8 <__fp_splitA+0x30>
 3a8:	16 16       	cp	r1, r22
 3aa:	17 06       	cpc	r1, r23
 3ac:	18 06       	cpc	r1, r24
 3ae:	99 1f       	adc	r25, r25
 3b0:	f1 cf       	rjmp	.-30     	; 0x394 <__fp_splitA+0xc>
 3b2:	86 95       	lsr	r24
 3b4:	71 05       	cpc	r23, r1
 3b6:	61 05       	cpc	r22, r1
 3b8:	08 94       	sec
 3ba:	08 95       	ret

000003bc <__fp_zero>:
 3bc:	e8 94       	clt

000003be <__fp_szero>:
 3be:	bb 27       	eor	r27, r27
 3c0:	66 27       	eor	r22, r22
 3c2:	77 27       	eor	r23, r23
 3c4:	cb 01       	movw	r24, r22
 3c6:	97 f9       	bld	r25, 7
 3c8:	08 95       	ret

000003ca <__mulsf3>:
 3ca:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <__mulsf3x>
 3ce:	0c 94 ab 01 	jmp	0x356	; 0x356 <__fp_round>
 3d2:	0e 94 9d 01 	call	0x33a	; 0x33a <__fp_pscA>
 3d6:	38 f0       	brcs	.+14     	; 0x3e6 <__mulsf3+0x1c>
 3d8:	0e 94 a4 01 	call	0x348	; 0x348 <__fp_pscB>
 3dc:	20 f0       	brcs	.+8      	; 0x3e6 <__mulsf3+0x1c>
 3de:	95 23       	and	r25, r21
 3e0:	11 f0       	breq	.+4      	; 0x3e6 <__mulsf3+0x1c>
 3e2:	0c 94 94 01 	jmp	0x328	; 0x328 <__fp_inf>
 3e6:	0c 94 9a 01 	jmp	0x334	; 0x334 <__fp_nan>
 3ea:	11 24       	eor	r1, r1
 3ec:	0c 94 df 01 	jmp	0x3be	; 0x3be <__fp_szero>

000003f0 <__mulsf3x>:
 3f0:	0e 94 bc 01 	call	0x378	; 0x378 <__fp_split3>
 3f4:	70 f3       	brcs	.-36     	; 0x3d2 <__mulsf3+0x8>

000003f6 <__mulsf3_pse>:
 3f6:	95 9f       	mul	r25, r21
 3f8:	c1 f3       	breq	.-16     	; 0x3ea <__mulsf3+0x20>
 3fa:	95 0f       	add	r25, r21
 3fc:	50 e0       	ldi	r21, 0x00	; 0
 3fe:	55 1f       	adc	r21, r21
 400:	62 9f       	mul	r22, r18
 402:	f0 01       	movw	r30, r0
 404:	72 9f       	mul	r23, r18
 406:	bb 27       	eor	r27, r27
 408:	f0 0d       	add	r31, r0
 40a:	b1 1d       	adc	r27, r1
 40c:	63 9f       	mul	r22, r19
 40e:	aa 27       	eor	r26, r26
 410:	f0 0d       	add	r31, r0
 412:	b1 1d       	adc	r27, r1
 414:	aa 1f       	adc	r26, r26
 416:	64 9f       	mul	r22, r20
 418:	66 27       	eor	r22, r22
 41a:	b0 0d       	add	r27, r0
 41c:	a1 1d       	adc	r26, r1
 41e:	66 1f       	adc	r22, r22
 420:	82 9f       	mul	r24, r18
 422:	22 27       	eor	r18, r18
 424:	b0 0d       	add	r27, r0
 426:	a1 1d       	adc	r26, r1
 428:	62 1f       	adc	r22, r18
 42a:	73 9f       	mul	r23, r19
 42c:	b0 0d       	add	r27, r0
 42e:	a1 1d       	adc	r26, r1
 430:	62 1f       	adc	r22, r18
 432:	83 9f       	mul	r24, r19
 434:	a0 0d       	add	r26, r0
 436:	61 1d       	adc	r22, r1
 438:	22 1f       	adc	r18, r18
 43a:	74 9f       	mul	r23, r20
 43c:	33 27       	eor	r19, r19
 43e:	a0 0d       	add	r26, r0
 440:	61 1d       	adc	r22, r1
 442:	23 1f       	adc	r18, r19
 444:	84 9f       	mul	r24, r20
 446:	60 0d       	add	r22, r0
 448:	21 1d       	adc	r18, r1
 44a:	82 2f       	mov	r24, r18
 44c:	76 2f       	mov	r23, r22
 44e:	6a 2f       	mov	r22, r26
 450:	11 24       	eor	r1, r1
 452:	9f 57       	subi	r25, 0x7F	; 127
 454:	50 40       	sbci	r21, 0x00	; 0
 456:	9a f0       	brmi	.+38     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 458:	f1 f0       	breq	.+60     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 45a:	88 23       	and	r24, r24
 45c:	4a f0       	brmi	.+18     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 45e:	ee 0f       	add	r30, r30
 460:	ff 1f       	adc	r31, r31
 462:	bb 1f       	adc	r27, r27
 464:	66 1f       	adc	r22, r22
 466:	77 1f       	adc	r23, r23
 468:	88 1f       	adc	r24, r24
 46a:	91 50       	subi	r25, 0x01	; 1
 46c:	50 40       	sbci	r21, 0x00	; 0
 46e:	a9 f7       	brne	.-22     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 470:	9e 3f       	cpi	r25, 0xFE	; 254
 472:	51 05       	cpc	r21, r1
 474:	80 f0       	brcs	.+32     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 476:	0c 94 94 01 	jmp	0x328	; 0x328 <__fp_inf>
 47a:	0c 94 df 01 	jmp	0x3be	; 0x3be <__fp_szero>
 47e:	5f 3f       	cpi	r21, 0xFF	; 255
 480:	e4 f3       	brlt	.-8      	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 482:	98 3e       	cpi	r25, 0xE8	; 232
 484:	d4 f3       	brlt	.-12     	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 486:	86 95       	lsr	r24
 488:	77 95       	ror	r23
 48a:	67 95       	ror	r22
 48c:	b7 95       	ror	r27
 48e:	f7 95       	ror	r31
 490:	e7 95       	ror	r30
 492:	9f 5f       	subi	r25, 0xFF	; 255
 494:	c1 f7       	brne	.-16     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 496:	fe 2b       	or	r31, r30
 498:	88 0f       	add	r24, r24
 49a:	91 1d       	adc	r25, r1
 49c:	96 95       	lsr	r25
 49e:	87 95       	ror	r24
 4a0:	97 f9       	bld	r25, 7
 4a2:	08 95       	ret

000004a4 <_exit>:
 4a4:	f8 94       	cli

000004a6 <__stop_program>:
 4a6:	ff cf       	rjmp	.-2      	; 0x4a6 <__stop_program>
