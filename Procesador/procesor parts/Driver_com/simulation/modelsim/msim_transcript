# Reading D:/altera/13.1/modelsim_ase/tcl/vsim/pref.tcl 
# do Driver_com_run_msim_rtl_vhdl.do 
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Copying D:\altera\13.1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied D:\altera\13.1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vcom -93 -work work {D:/altera/13.1/taller de sistemas digitales/Driver_com/Driver_com.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Compiling entity Driver_com
# -- Compiling architecture shape of Driver_com
# vcom -93 -work work {D:/altera/13.1/taller de sistemas digitales/Driver_com/div_clk.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Compiling entity div_clk
# -- Compiling architecture Behavioral of div_clk
# vcom -93 -work work {D:/altera/13.1/taller de sistemas digitales/Driver_com/com_serie.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Compiling entity com_serie
# -- Compiling architecture Behavioral of com_serie
# 
vsim work.driver_com
# vsim work.driver_com 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.numeric_std(body)
# Loading ieee.std_logic_arith(body)
# Loading ieee.std_logic_unsigned(body)
# Loading work.driver_com(shape)
# Loading work.div_clk(behavioral)
# Loading work.com_serie(behavioral)
wave create -driver freeze -pattern clock -initialvalue U -period 20ps -dutycycle 50 -starttime 0ps -endtime 2000ps sim:/driver_com/CLOCK_50
add wave -position insertpoint  \
sim:/driver_com/clk_10M
add wave -position insertpoint  \
sim:/driver_com/GPIO0_D
run -all
