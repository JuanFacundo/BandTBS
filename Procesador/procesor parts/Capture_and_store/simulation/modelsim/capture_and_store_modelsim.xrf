vendor_name = ModelSim
source_file = 1, C:/Users/matez/OneDrive/Documentos/my-works/5to año/Taller de Sistemas Digitales/Proyecto BBTS/Capture_and_store/RAM_Memory.vhd
source_file = 1, C:/Users/matez/OneDrive/Documentos/my-works/5to año/Taller de Sistemas Digitales/Proyecto BBTS/Capture_and_store/Capture_driver.vhd
source_file = 1, C:/Users/matez/OneDrive/Documentos/my-works/5to año/Taller de Sistemas Digitales/Proyecto BBTS/Capture_and_store/RegisterPP.vhd
source_file = 1, C:/Users/matez/OneDrive/Documentos/my-works/5to año/Taller de Sistemas Digitales/Proyecto BBTS/Capture_and_store/div_clk.vhd
source_file = 1, C:/Users/matez/OneDrive/Documentos/my-works/5to año/Taller de Sistemas Digitales/Proyecto BBTS/Capture_and_store/capture_and_store.vhd
source_file = 1, C:/Users/matez/OneDrive/Documentos/my-works/5to año/Taller de Sistemas Digitales/Proyecto BBTS/Capture_and_store/db/capture_and_store.cbx.xml
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, C:/Users/matez/OneDrive/Documentos/my-works/5to año/Taller de Sistemas Digitales/Proyecto BBTS/Capture_and_store/memory.vhd
design_name = capture_and_store
instance = comp, \Q_OUT[0]~output\, Q_OUT[0]~output, capture_and_store, 1
instance = comp, \Q_OUT[1]~output\, Q_OUT[1]~output, capture_and_store, 1
instance = comp, \Q_OUT[2]~output\, Q_OUT[2]~output, capture_and_store, 1
instance = comp, \Q_OUT[3]~output\, Q_OUT[3]~output, capture_and_store, 1
instance = comp, \PCLK~input\, PCLK~input, capture_and_store, 1
instance = comp, \PCLK~inputclkctrl\, PCLK~inputclkctrl, capture_and_store, 1
instance = comp, \Cap|DIV|Clk_aux~0\, Cap|DIV|Clk_aux~0, capture_and_store, 1
instance = comp, \Cap|DIV|Clk_aux~feeder\, Cap|DIV|Clk_aux~feeder, capture_and_store, 1
instance = comp, \Cap|DIV|Clk_aux\, Cap|DIV|Clk_aux, capture_and_store, 1
instance = comp, \Cap|DIV|Clk_aux~clkctrl\, Cap|DIV|Clk_aux~clkctrl, capture_and_store, 1
instance = comp, \HREF~input\, HREF~input, capture_and_store, 1
instance = comp, \Cap|pixel_per_line_counter_aux[0]~1\, Cap|pixel_per_line_counter_aux[0]~1, capture_and_store, 1
instance = comp, \Cap|pixel_per_line_counter_aux[0]\, Cap|pixel_per_line_counter_aux[0], capture_and_store, 1
instance = comp, \Cap|pixel_per_line_counter_aux[1]~0\, Cap|pixel_per_line_counter_aux[1]~0, capture_and_store, 1
instance = comp, \Cap|pixel_per_line_counter_aux[1]\, Cap|pixel_per_line_counter_aux[1], capture_and_store, 1
instance = comp, \Cap|line_counter_aux[0]~2\, Cap|line_counter_aux[0]~2, capture_and_store, 1
instance = comp, \Cap|line_counter_aux[0]\, Cap|line_counter_aux[0], capture_and_store, 1
instance = comp, \Cap|line_counter_aux[1]~0\, Cap|line_counter_aux[1]~0, capture_and_store, 1
instance = comp, \Cap|line_counter_aux[1]~1\, Cap|line_counter_aux[1]~1, capture_and_store, 1
instance = comp, \Cap|line_counter_aux[1]\, Cap|line_counter_aux[1], capture_and_store, 1
instance = comp, \address[2]~feeder\, address[2]~feeder, capture_and_store, 1
instance = comp, \address[2]\, address[2], capture_and_store, 1
instance = comp, \address[0]~feeder\, address[0]~feeder, capture_and_store, 1
instance = comp, \address[0]\, address[0], capture_and_store, 1
instance = comp, \D_IN[2]~input\, D_IN[2]~input, capture_and_store, 1
instance = comp, \RST~input\, RST~input, capture_and_store, 1
instance = comp, \RST~inputclkctrl\, RST~inputclkctrl, capture_and_store, 1
instance = comp, \Cap|ER|reg[2]\, Cap|ER|reg[2], capture_and_store, 1
instance = comp, \Cap|mux_out[2]~0\, Cap|mux_out[2]~0, capture_and_store, 1
instance = comp, \D_IN[6]~input\, D_IN[6]~input, capture_and_store, 1
instance = comp, \Cap|ER|reg[6]~feeder\, Cap|ER|reg[6]~feeder, capture_and_store, 1
instance = comp, \Cap|ER|reg[6]\, Cap|ER|reg[6], capture_and_store, 1
instance = comp, \D_IN[5]~input\, D_IN[5]~input, capture_and_store, 1
instance = comp, \Cap|ER|reg[5]~feeder\, Cap|ER|reg[5]~feeder, capture_and_store, 1
instance = comp, \Cap|ER|reg[5]\, Cap|ER|reg[5], capture_and_store, 1
instance = comp, \D_IN[1]~input\, D_IN[1]~input, capture_and_store, 1
instance = comp, \Cap|ER|reg[1]\, Cap|ER|reg[1], capture_and_store, 1
instance = comp, \D_IN[4]~input\, D_IN[4]~input, capture_and_store, 1
instance = comp, \Cap|ER|reg[4]~feeder\, Cap|ER|reg[4]~feeder, capture_and_store, 1
instance = comp, \Cap|ER|reg[4]\, Cap|ER|reg[4], capture_and_store, 1
instance = comp, \D_IN[0]~input\, D_IN[0]~input, capture_and_store, 1
instance = comp, \Cap|ER|reg[0]\, Cap|ER|reg[0], capture_and_store, 1
instance = comp, \Cap|ACC|reg[0]~6\, Cap|ACC|reg[0]~6, capture_and_store, 1
instance = comp, \Cap|ACC|reg[0]\, Cap|ACC|reg[0], capture_and_store, 1
instance = comp, \Cap|mux_out[0]~2\, Cap|mux_out[0]~2, capture_and_store, 1
instance = comp, \Cap|ACC|reg[1]~8\, Cap|ACC|reg[1]~8, capture_and_store, 1
instance = comp, \Cap|ACC|reg[1]\, Cap|ACC|reg[1], capture_and_store, 1
instance = comp, \Cap|mux_out[1]~1\, Cap|mux_out[1]~1, capture_and_store, 1
instance = comp, \Cap|ACC|reg[2]~10\, Cap|ACC|reg[2]~10, capture_and_store, 1
instance = comp, \Cap|ACC|reg[2]\, Cap|ACC|reg[2], capture_and_store, 1
instance = comp, \Cap|BUF|reg[0]~feeder\, Cap|BUF|reg[0]~feeder, capture_and_store, 1
instance = comp, \Cap|BUF|reg[0]\, Cap|BUF|reg[0], capture_and_store, 1
instance = comp, \Load_Store|ram[15][0]~feeder\, Load_Store|ram[15][0]~feeder, capture_and_store, 1
instance = comp, \wr~0\, wr~0, capture_and_store, 1
instance = comp, \address[1]~feeder\, address[1]~feeder, capture_and_store, 1
instance = comp, \address[1]\, address[1], capture_and_store, 1
instance = comp, \Load_Store|Decoder0~3\, Load_Store|Decoder0~3, capture_and_store, 1
instance = comp, \Load_Store|ram[15][0]\, Load_Store|ram[15][0], capture_and_store, 1
instance = comp, \Load_Store|Decoder0~0\, Load_Store|Decoder0~0, capture_and_store, 1
instance = comp, \Load_Store|ram[13][0]\, Load_Store|ram[13][0], capture_and_store, 1
instance = comp, \Load_Store|ram[14][0]~feeder\, Load_Store|ram[14][0]~feeder, capture_and_store, 1
instance = comp, \Load_Store|Decoder0~1\, Load_Store|Decoder0~1, capture_and_store, 1
instance = comp, \Load_Store|ram[14][0]\, Load_Store|ram[14][0], capture_and_store, 1
instance = comp, \Load_Store|Decoder0~2\, Load_Store|Decoder0~2, capture_and_store, 1
instance = comp, \Load_Store|ram[12][0]\, Load_Store|ram[12][0], capture_and_store, 1
instance = comp, \Load_Store|Mux3~0\, Load_Store|Mux3~0, capture_and_store, 1
instance = comp, \Load_Store|Mux3~1\, Load_Store|Mux3~1, capture_and_store, 1
instance = comp, \Load_Store|ram[3][0]~feeder\, Load_Store|ram[3][0]~feeder, capture_and_store, 1
instance = comp, \Load_Store|Decoder0~7\, Load_Store|Decoder0~7, capture_and_store, 1
instance = comp, \Load_Store|ram[3][0]\, Load_Store|ram[3][0], capture_and_store, 1
instance = comp, \Load_Store|Decoder0~4\, Load_Store|Decoder0~4, capture_and_store, 1
instance = comp, \Load_Store|ram[2][0]\, Load_Store|ram[2][0], capture_and_store, 1
instance = comp, \Load_Store|ram[1][0]~feeder\, Load_Store|ram[1][0]~feeder, capture_and_store, 1
instance = comp, \Load_Store|Decoder0~5\, Load_Store|Decoder0~5, capture_and_store, 1
instance = comp, \Load_Store|ram[1][0]\, Load_Store|ram[1][0], capture_and_store, 1
instance = comp, \Load_Store|Decoder0~6\, Load_Store|Decoder0~6, capture_and_store, 1
instance = comp, \Load_Store|ram[0][0]\, Load_Store|ram[0][0], capture_and_store, 1
instance = comp, \Load_Store|Mux3~2\, Load_Store|Mux3~2, capture_and_store, 1
instance = comp, \Load_Store|Mux3~3\, Load_Store|Mux3~3, capture_and_store, 1
instance = comp, \Load_Store|Mux3~4\, Load_Store|Mux3~4, capture_and_store, 1
instance = comp, \Load_Store|data_out[0]~0\, Load_Store|data_out[0]~0, capture_and_store, 1
instance = comp, \Load_Store|data_out[0]\, Load_Store|data_out[0], capture_and_store, 1
instance = comp, \D_IN[7]~input\, D_IN[7]~input, capture_and_store, 1
instance = comp, \Cap|ER|reg[7]~feeder\, Cap|ER|reg[7]~feeder, capture_and_store, 1
instance = comp, \Cap|ER|reg[7]\, Cap|ER|reg[7], capture_and_store, 1
instance = comp, \D_IN[3]~input\, D_IN[3]~input, capture_and_store, 1
instance = comp, \Cap|ER|reg[3]\, Cap|ER|reg[3], capture_and_store, 1
instance = comp, \Cap|mux_out[3]~3\, Cap|mux_out[3]~3, capture_and_store, 1
instance = comp, \Cap|ACC|reg[3]~12\, Cap|ACC|reg[3]~12, capture_and_store, 1
instance = comp, \Cap|ACC|reg[3]\, Cap|ACC|reg[3], capture_and_store, 1
instance = comp, \Cap|BUF|reg[1]~feeder\, Cap|BUF|reg[1]~feeder, capture_and_store, 1
instance = comp, \Cap|BUF|reg[1]\, Cap|BUF|reg[1], capture_and_store, 1
instance = comp, \Load_Store|ram[15][1]~feeder\, Load_Store|ram[15][1]~feeder, capture_and_store, 1
instance = comp, \Load_Store|ram[15][1]\, Load_Store|ram[15][1], capture_and_store, 1
instance = comp, \Load_Store|ram[13][1]\, Load_Store|ram[13][1], capture_and_store, 1
instance = comp, \Load_Store|ram[14][1]~feeder\, Load_Store|ram[14][1]~feeder, capture_and_store, 1
instance = comp, \Load_Store|ram[14][1]\, Load_Store|ram[14][1], capture_and_store, 1
instance = comp, \Load_Store|ram[12][1]\, Load_Store|ram[12][1], capture_and_store, 1
instance = comp, \Load_Store|Mux2~0\, Load_Store|Mux2~0, capture_and_store, 1
instance = comp, \Load_Store|Mux2~1\, Load_Store|Mux2~1, capture_and_store, 1
instance = comp, \Load_Store|ram[3][1]~feeder\, Load_Store|ram[3][1]~feeder, capture_and_store, 1
instance = comp, \Load_Store|ram[3][1]\, Load_Store|ram[3][1], capture_and_store, 1
instance = comp, \Load_Store|ram[2][1]\, Load_Store|ram[2][1], capture_and_store, 1
instance = comp, \Load_Store|ram[1][1]~feeder\, Load_Store|ram[1][1]~feeder, capture_and_store, 1
instance = comp, \Load_Store|ram[1][1]\, Load_Store|ram[1][1], capture_and_store, 1
instance = comp, \Load_Store|ram[0][1]\, Load_Store|ram[0][1], capture_and_store, 1
instance = comp, \Load_Store|Mux2~2\, Load_Store|Mux2~2, capture_and_store, 1
instance = comp, \Load_Store|Mux2~3\, Load_Store|Mux2~3, capture_and_store, 1
instance = comp, \Load_Store|Mux2~4\, Load_Store|Mux2~4, capture_and_store, 1
instance = comp, \Load_Store|data_out[1]\, Load_Store|data_out[1], capture_and_store, 1
instance = comp, \Cap|ACC|reg[4]~14\, Cap|ACC|reg[4]~14, capture_and_store, 1
instance = comp, \Cap|ACC|reg[4]\, Cap|ACC|reg[4], capture_and_store, 1
instance = comp, \Cap|BUF|reg[2]~feeder\, Cap|BUF|reg[2]~feeder, capture_and_store, 1
instance = comp, \Cap|BUF|reg[2]\, Cap|BUF|reg[2], capture_and_store, 1
instance = comp, \Load_Store|ram[13][2]~feeder\, Load_Store|ram[13][2]~feeder, capture_and_store, 1
instance = comp, \Load_Store|ram[13][2]\, Load_Store|ram[13][2], capture_and_store, 1
instance = comp, \Load_Store|ram[15][2]~feeder\, Load_Store|ram[15][2]~feeder, capture_and_store, 1
instance = comp, \Load_Store|ram[15][2]\, Load_Store|ram[15][2], capture_and_store, 1
instance = comp, \Load_Store|ram[14][2]~feeder\, Load_Store|ram[14][2]~feeder, capture_and_store, 1
instance = comp, \Load_Store|ram[14][2]\, Load_Store|ram[14][2], capture_and_store, 1
instance = comp, \Load_Store|ram[12][2]\, Load_Store|ram[12][2], capture_and_store, 1
instance = comp, \Load_Store|Mux1~0\, Load_Store|Mux1~0, capture_and_store, 1
instance = comp, \Load_Store|Mux1~1\, Load_Store|Mux1~1, capture_and_store, 1
instance = comp, \Load_Store|ram[3][2]~feeder\, Load_Store|ram[3][2]~feeder, capture_and_store, 1
instance = comp, \Load_Store|ram[3][2]\, Load_Store|ram[3][2], capture_and_store, 1
instance = comp, \Load_Store|ram[2][2]\, Load_Store|ram[2][2], capture_and_store, 1
instance = comp, \Load_Store|ram[1][2]~feeder\, Load_Store|ram[1][2]~feeder, capture_and_store, 1
instance = comp, \Load_Store|ram[1][2]\, Load_Store|ram[1][2], capture_and_store, 1
instance = comp, \Load_Store|ram[0][2]\, Load_Store|ram[0][2], capture_and_store, 1
instance = comp, \Load_Store|Mux1~2\, Load_Store|Mux1~2, capture_and_store, 1
instance = comp, \Load_Store|Mux1~3\, Load_Store|Mux1~3, capture_and_store, 1
instance = comp, \Load_Store|Mux1~4\, Load_Store|Mux1~4, capture_and_store, 1
instance = comp, \Load_Store|data_out[2]\, Load_Store|data_out[2], capture_and_store, 1
instance = comp, \Cap|ACC|reg[5]~16\, Cap|ACC|reg[5]~16, capture_and_store, 1
instance = comp, \Cap|ACC|reg[5]\, Cap|ACC|reg[5], capture_and_store, 1
instance = comp, \Cap|BUF|reg[3]~feeder\, Cap|BUF|reg[3]~feeder, capture_and_store, 1
instance = comp, \Cap|BUF|reg[3]\, Cap|BUF|reg[3], capture_and_store, 1
instance = comp, \Load_Store|ram[13][3]~feeder\, Load_Store|ram[13][3]~feeder, capture_and_store, 1
instance = comp, \Load_Store|ram[13][3]\, Load_Store|ram[13][3], capture_and_store, 1
instance = comp, \Load_Store|ram[15][3]~feeder\, Load_Store|ram[15][3]~feeder, capture_and_store, 1
instance = comp, \Load_Store|ram[15][3]\, Load_Store|ram[15][3], capture_and_store, 1
instance = comp, \Load_Store|ram[14][3]~feeder\, Load_Store|ram[14][3]~feeder, capture_and_store, 1
instance = comp, \Load_Store|ram[14][3]\, Load_Store|ram[14][3], capture_and_store, 1
instance = comp, \Load_Store|ram[12][3]\, Load_Store|ram[12][3], capture_and_store, 1
instance = comp, \Load_Store|Mux0~0\, Load_Store|Mux0~0, capture_and_store, 1
instance = comp, \Load_Store|Mux0~1\, Load_Store|Mux0~1, capture_and_store, 1
instance = comp, \Load_Store|ram[3][3]~feeder\, Load_Store|ram[3][3]~feeder, capture_and_store, 1
instance = comp, \Load_Store|ram[3][3]\, Load_Store|ram[3][3], capture_and_store, 1
instance = comp, \Load_Store|ram[2][3]\, Load_Store|ram[2][3], capture_and_store, 1
instance = comp, \Load_Store|ram[1][3]~feeder\, Load_Store|ram[1][3]~feeder, capture_and_store, 1
instance = comp, \Load_Store|ram[1][3]\, Load_Store|ram[1][3], capture_and_store, 1
instance = comp, \Load_Store|ram[0][3]\, Load_Store|ram[0][3], capture_and_store, 1
instance = comp, \Load_Store|Mux0~2\, Load_Store|Mux0~2, capture_and_store, 1
instance = comp, \Load_Store|Mux0~3\, Load_Store|Mux0~3, capture_and_store, 1
instance = comp, \Load_Store|Mux0~4\, Load_Store|Mux0~4, capture_and_store, 1
instance = comp, \Load_Store|data_out[3]\, Load_Store|data_out[3], capture_and_store, 1
