# Reading C:/altera/13.1/modelsim_ase/tcl/vsim/pref.tcl 
# do cronos_run_msim_rtl_vhdl.do 
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Copying C:\altera\13.1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied C:\altera\13.1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vcom -93 -work work {C:/Users/Usuario/Documents/1Juan/1Facultad/6 Semestre/E1212 Técnicas Digitales/práctica/tp8/cronos/cronos.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Compiling entity cronos
# -- Compiling architecture shape of cronos
# vcom -93 -work work {C:/Users/Usuario/Documents/1Juan/1Facultad/6 Semestre/E1212 Técnicas Digitales/práctica/tp8/cronos/ttype.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling entity Ttype
# -- Compiling architecture shape of Ttype
# 
vsim work.cronos
# vsim work.cronos 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.numeric_std(body)
# Loading ieee.std_logic_arith(body)
# Loading ieee.std_logic_unsigned(body)
# Loading work.cronos(shape)
# Loading work.ttype(shape)
wave create -driver freeze -pattern clock -initialvalue 0 -period 20ns -dutycycle 50 -starttime 0ms -endtime 20ms sim:/cronos/CLOCK_50
wave create -driver freeze -pattern constant -value 00 -range 1 0 -starttime 0ms -endtime 20ms sim:/cronos/SW
wave edit invert -start 5310ps -end 16687ps Edit:/cronos/SW
add wave -position end  sim:/cronos/cent
add wave -position end  sim:/cronos/HEX0_D
run -all
